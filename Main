# Embedded-Systems


#include "msp.h"
#include "lab1.h"
#include <stdint.h>

#define WDT_A_CTL_HOLD ((uint16_t)0x0080)
#define WDT_A_CTL_PW ((uint16_t)0x5A00)


void main(void)
{
    unsigned int count =0;
    int i =0;

    uint8_t * P1_IN = (uint8_t *)p1_IN;
    uint8_t * P1_SEL0 = (uint8_t *)p1_SEL0;
    uint8_t * P1_SEL1 = (uint8_t *)p1_SEL1;
    uint8_t * P1_SELC = (uint8_t *)p1_SELC;
    uint8_t * P1_OUT = (uint8_t *)p1_OUT;
    uint8_t * P1_DIR = (uint8_t *)p1_DIR;



    WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;  //stop watchdog timer

    *P1_SEL0 = 0;  // P1.0 to general IOmode
    *P1_SEL1 = 0;
    *P1_OUT |= 0;   // P1.0 output low
    *P1_DIR |= 1;  // P1.0 set as output direction

    uint16_t var1 = 0XA274;

    var1 |= BIT0 | BIT4 | BIT5 | BITE | BITF; //sets the bits 0,4,5,14,15 //0xC031
    var1 &= ~(BIT9 | BITA| BITF); //Clears the bits 9,10,15                  //0x79FF
    var1 ^= BIT4 | BIT5 |BIT6| BIT7| BIT8| BIT9| BITA| BITB; //Toggles the middle eight bits  //0x0FF0

    while(1) {
        count++;
        *P1_OUT = 1;          //blink P1.0 LED
        for(i=0; i<30000; i++); //delay

        make_square_wave();
    }
}
